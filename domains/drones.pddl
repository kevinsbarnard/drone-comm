;; Multi-agent task domain
(define (domain drones)
    (:requirements :typing)
  (:types drone location)
  (:predicates (at ?d - drone ?l - location)
	       (commrange ?la ?lb - location)
	       (recorded ?d - drone ?l - location)
	       (accessible ?la ?lb - location))
  (:derived (inter ?la ?lb)
	    (exists (?li - location)
		    (and (commpossible ?la ?li)
			 (commpossible ?li ?lb))))
  (:derived (commpossible ?la ?lb - location)
	    (exists (?da ?db - drone)
		    (or (and (at ?da ?la) (at ?db ?lb)
			     (commrange ?la ?lb))
			(inter ?la ?lb))))
  (:functions (cost-used ?d - drone)
	      (cost ?l1 ?l2 - location)
	      (total-cost))
  (:action move
	   :parameters (?d - drone ?la - location ?lb - location)
	   :precondition (and (at ?d ?la)
			      (accessible ?la ?lb))
	   :effect (and (not (at ?d ?la))
			(at ?d ?lb)
			(= (cost-used ?d) (+ (cost-used ?d) (cost ?la ?lb)))
			(= (total-cost) (+ (total-cost) (cost ?la ?lb)))))
  (:action record
	   :parameters (?d - drone ?l - location)
	   :precondition (at ?d ?l)
	   :effect (and (recorded ?d ?l)
			(= (total-cost) (+ (total-cost) 1))))
  (:action send
	   :parameters (?dsend ?drecv - drone ?lsend ?lrecv ?ldata - location)
	   :precondition (and (recorded ?dsend ?ldata)
			      (at ?dsend ?lsend)
			      (at ?drecv ?lrecv)
			      (commpossible ?lsend ?lrecv))
	   :effect (and (recorded ?drecv ?ldata))))
